{
	"$schema": "http://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
	"contentVersion": "1.0.0.0",
	"parameters": {
		"factoryName": {
			"type": "string",
			"metadata": "Data Factory name",
			"defaultValue": "tasketldatafactory"
		},
		"AzureDataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'AzureDataLakeStorage'"
		},
		"AzureDatabricks_accessToken": {
			"type": "secureString",
			"metadata": "Secure string for 'accessToken' of 'AzureDatabricks'"
		},
		"DataLakeStorage_accountKey": {
			"type": "secureString",
			"metadata": "Secure string for 'accountKey' of 'DataLakeStorage'"
		},
		"SqlServerinfo_password": {
			"type": "secureString",
			"metadata": "Secure string for 'password' of 'SqlServerinfo'"
		},
		"AzureDataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://etlstac.dfs.core.windows.net/"
		},
		"AzureDatabricks_properties_typeProperties_existingClusterId": {
			"type": "string",
			"defaultValue": "0604-070624-bw9drp0r"
		},
		"DataLakeStorage_properties_typeProperties_url": {
			"type": "string",
			"defaultValue": "https://tasketlsa.dfs.core.windows.net/"
		},
		"SqlServerinfo_properties_typeProperties_server": {
			"type": "string",
			"defaultValue": "etltask.database.windows.net"
		},
		"SqlServerinfo_properties_typeProperties_database": {
			"type": "string",
			"defaultValue": "tasketldb"
		},
		"SqlServerinfo_properties_typeProperties_userName": {
			"type": "string",
			"defaultValue": "etltask"
		}
	},
	"variables": {
		"factoryId": "[concat('Microsoft.DataFactory/factories/', parameters('factoryName'))]"
	},
	"resources": [
		{
			"name": "[concat(parameters('factoryName'), '/AzureDataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('AzureDataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('AzureDataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/AzureDatabricks')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureDatabricks",
				"typeProperties": {
					"domain": "https://adb-56446519516552.12.azuredatabricks.net/",
					"accessToken": {
						"type": "SecureString",
						"value": "[parameters('AzureDatabricks_accessToken')]"
					},
					"existingClusterId": "[parameters('AzureDatabricks_properties_typeProperties_existingClusterId')]"
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/DataLakeStorage')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "AzureBlobFS",
				"typeProperties": {
					"url": "[parameters('DataLakeStorage_properties_typeProperties_url')]",
					"accountKey": {
						"type": "SecureString",
						"value": "[parameters('DataLakeStorage_accountKey')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/SqlServerinfo')]",
			"type": "Microsoft.DataFactory/factories/linkedServices",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"type": "SqlServer",
				"typeProperties": {
					"server": "[parameters('SqlServerinfo_properties_typeProperties_server')]",
					"database": "[parameters('SqlServerinfo_properties_typeProperties_database')]",
					"encrypt": "mandatory",
					"trustServerCertificate": false,
					"authenticationType": "SQL",
					"userName": "[parameters('SqlServerinfo_properties_typeProperties_userName')]",
					"password": {
						"type": "SecureString",
						"value": "[parameters('SqlServerinfo_password')]"
					}
				}
			},
			"dependsOn": []
		},
		{
			"name": "[concat(parameters('factoryName'), '/Parquet')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table_Names": {
						"type": "string"
					},
					"landing_path": {
						"type": "string"
					},
					"container_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('landing_path/',dataset().Table_Names)\n",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Psink')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerinfo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {
					"schema": "semantic",
					"table": "fact_quality_material_movement"
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Psrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"container_name": {
						"type": "string"
					},
					"Tables_Name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "Parquet",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"folderPath": {
							"value": "@concat('/proc_layer/',dataset().Tables_Name)",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"compressionCodec": "snappy"
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/cpsrc')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "DataLakeStorage",
					"type": "LinkedServiceReference"
				},
				"parameters": {
					"Table_Names": {
						"type": "string"
					},
					"source_path": {
						"type": "string"
					},
					"container_name": {
						"type": "string"
					}
				},
				"annotations": [],
				"type": "DelimitedText",
				"typeProperties": {
					"location": {
						"type": "AzureBlobFSLocation",
						"fileName": {
							"value": "@dataset().Table_Names",
							"type": "Expression"
						},
						"folderPath": {
							"value": "@dataset().source_path",
							"type": "Expression"
						},
						"fileSystem": {
							"value": "@dataset().container_name",
							"type": "Expression"
						}
					},
					"columnDelimiter": ",",
					"escapeChar": "\\",
					"firstRowAsHeader": true,
					"quoteChar": "\""
				},
				"schema": []
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/DataLakeStorage')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sqlserver')]",
			"type": "Microsoft.DataFactory/factories/datasets",
			"apiVersion": "2018-06-01",
			"properties": {
				"linkedServiceName": {
					"referenceName": "SqlServerinfo",
					"type": "LinkedServiceReference"
				},
				"annotations": [],
				"type": "SqlServerTable",
				"schema": [],
				"typeProperties": {}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/linkedServices/SqlServerinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/C2P')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "meta_data",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT tm.*, jm.jobname\r\nFROM meta_data.table_meta tm\r\ninner join meta_data.job_metadata jm ON tm.JobID = jm.jobid\r\nWHERE jm.jobname = 'C2P' AND Table_type='fact';\r\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlserver",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "meta_data",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('meta_data').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "start_time",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/21691a05e6@mits.ac.in/start_time",
										"baseParameters": {
											"pipeline_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pipeline_run_id": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"process_names": "start_time"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "c2p",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "start_time",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/21691a05e6@mits.ac.in/process_layer",
										"baseParameters": {
											"processed_Path": {
												"value": "@item().processed_Path",
												"type": "Expression"
											},
											"Mode": {
												"value": "@item().Mode",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "end_time",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "ForEach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/21691a05e6@mits.ac.in/end_time",
							"baseParameters": {
								"pipeline_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pipeline_run_id": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"process_names": "end_time"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "end_time",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@if(equals(activity('end_time').status, 'Succeeded'), 'Success', 'Failure')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerinfo",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "UPDATE meta_data.pipeline_logs\nSET status = '@{variables('status')}'\nWHERE pipeline_run_id = '@{pipeline().RunId}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-12T05:19:37Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sqlserver')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServerinfo')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/Etl_pipeline')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "metadata",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT tm.*, jm.jobname\r\nFROM meta_data.table_meta tm\r\nJOIN meta_data.job_metadata jm ON tm.JobID = jm.jobid\r\nWHERE jm.jobname = 's2c';\r\n",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlserver",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "foreach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "metadata",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('metadata').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "source_landingdata",
									"type": "Copy",
									"dependsOn": [
										{
											"activity": "start_time",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "DelimitedTextSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "*.*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "DelimitedTextReadSettings"
											}
										},
										"sink": {
											"type": "ParquetSink",
											"storeSettings": {
												"type": "AzureBlobFSWriteSettings"
											},
											"formatSettings": {
												"type": "ParquetWriteSettings"
											}
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "cpsrc",
											"type": "DatasetReference",
											"parameters": {
												"Table_Names": {
													"value": "@concat(item().Table_Names)\n",
													"type": "Expression"
												},
												"source_path": {
													"value": "@concat(item().source_path,'/',item().Table_Names)",
													"type": "Expression"
												},
												"container_name": {
													"value": "@pipeline().globalParameters.container_name",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Parquet",
											"type": "DatasetReference",
											"parameters": {
												"Table_Names": {
													"value": "@item().Table_Names",
													"type": "Expression"
												},
												"landing_path": {
													"value": "@concat('landing_path/',item().Table_Names)",
													"type": "Expression"
												},
												"container_name": {
													"value": "@pipeline().globalParameters.container_name",
													"type": "Expression"
												}
											}
										}
									]
								},
								{
									"name": "start_time",
									"type": "DatabricksNotebook",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/21691a05e6@mits.ac.in/Etl_nb",
										"baseParameters": {
											"pipeline_name": {
												"value": "@pipeline().Pipeline",
												"type": "Expression"
											},
											"pipeline_run_id": {
												"value": "@pipeline().RunId",
												"type": "Expression"
											},
											"process_name": "start_time"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "landing_curateddata",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "source_landingdata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/21691a05e6@mits.ac.in/Etl_nb",
										"baseParameters": {
											"Table_Names": {
												"value": "@item().Table_Names",
												"type": "Expression"
											},
											"landing_path": {
												"value": "@item().landing_Path",
												"type": "Expression"
											},
											"curated_path": {
												"value": "@item().curated_Path",
												"type": "Expression"
											},
											"process_name": "l2c",
											"Mode": {
												"value": "@item().Mode",
												"type": "Expression"
											}
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "archive_on_success",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "landing_curateddata",
											"dependencyConditions": [
												"Succeeded"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/21691a05e6@mits.ac.in/Etl_nb",
										"baseParameters": {
											"Table_Names": {
												"value": "@item().Table_Names",
												"type": "Expression"
											},
											"landing_path": {
												"value": "@item().landing_path",
												"type": "Expression"
											},
											"process_name": "archive"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								},
								{
									"name": "archive_on_failure",
									"type": "DatabricksNotebook",
									"dependsOn": [
										{
											"activity": "landing_curateddata",
											"dependencyConditions": [
												"Failed"
											]
										}
									],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"notebookPath": "/Users/21691a05e6@mits.ac.in/Etl_nb",
										"baseParameters": {
											"File_Names": {
												"value": "@item().File_Names",
												"type": "Expression"
											},
											"landing_path": {
												"value": "@item().landing_path",
												"type": "Expression"
											},
											"process_name": "archive"
										}
									},
									"linkedServiceName": {
										"referenceName": "AzureDatabricks",
										"type": "LinkedServiceReference"
									}
								}
							]
						}
					},
					{
						"name": "end_time",
						"type": "DatabricksNotebook",
						"dependsOn": [
							{
								"activity": "foreach",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"notebookPath": "/Users/21691a05e6@mits.ac.in/Etl_nb",
							"baseParameters": {
								"pipeline_name": {
									"value": "@pipeline().Pipeline",
									"type": "Expression"
								},
								"pipeline_run_id": {
									"value": "@pipeline().RunId",
									"type": "Expression"
								},
								"process_name": "end_time"
							}
						},
						"linkedServiceName": {
							"referenceName": "AzureDatabricks",
							"type": "LinkedServiceReference"
						}
					},
					{
						"name": "Set variable",
						"type": "SetVariable",
						"dependsOn": [
							{
								"activity": "end_time",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"variableName": "status",
							"value": {
								"value": "@if(equals(activity('end_time').status, 'Succeeded'), 'Success', 'Failure')",
								"type": "Expression"
							}
						}
					},
					{
						"name": "Script",
						"type": "Script",
						"dependsOn": [
							{
								"activity": "Set variable",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"linkedServiceName": {
							"referenceName": "SqlServerinfo",
							"type": "LinkedServiceReference"
						},
						"typeProperties": {
							"scripts": [
								{
									"type": "Query",
									"text": {
										"value": "UPDATE meta_data.pipeline_logs\nSET\n    status = '@{variables('status')}'\nWHERE pipeline_run_id = '@{pipeline().RunId}'",
										"type": "Expression"
									}
								}
							],
							"scriptBlockExecutionTimeout": "02:00:00"
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-12T12:01:31Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sqlserver')]",
				"[concat(variables('factoryId'), '/linkedServices/AzureDatabricks')]",
				"[concat(variables('factoryId'), '/linkedServices/SqlServerinfo')]",
				"[concat(variables('factoryId'), '/datasets/cpsrc')]",
				"[concat(variables('factoryId'), '/datasets/Parquet')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/P2S')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "path_info",
						"type": "Lookup",
						"dependsOn": [],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"source": {
								"type": "SqlServerSource",
								"sqlReaderQuery": "SELECT tm.*, jm.jobname\nFROM meta_data.table_meta tm\ninner join meta_data.job_metadata jm ON tm.JobID = jm.jobid\nWHERE jm.jobname = 'P2S';",
								"queryTimeout": "02:00:00",
								"partitionOption": "None"
							},
							"dataset": {
								"referenceName": "sqlserver",
								"type": "DatasetReference",
								"parameters": {}
							},
							"firstRowOnly": false
						}
					},
					{
						"name": "ForEach",
						"type": "ForEach",
						"dependsOn": [
							{
								"activity": "path_info",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"userProperties": [],
						"typeProperties": {
							"items": {
								"value": "@activity('path_info').output.value",
								"type": "Expression"
							},
							"activities": [
								{
									"name": "Copy data",
									"type": "Copy",
									"dependsOn": [],
									"policy": {
										"timeout": "0.12:00:00",
										"retry": 0,
										"retryIntervalInSeconds": 30,
										"secureOutput": false,
										"secureInput": false
									},
									"userProperties": [],
									"typeProperties": {
										"source": {
											"type": "ParquetSource",
											"storeSettings": {
												"type": "AzureBlobFSReadSettings",
												"recursive": true,
												"wildcardFileName": "*.*",
												"enablePartitionDiscovery": false
											},
											"formatSettings": {
												"type": "ParquetReadSettings"
											}
										},
										"sink": {
											"type": "SqlServerSink",
											"writeBehavior": "insert",
											"sqlWriterUseTableLock": false
										},
										"enableStaging": false,
										"translator": {
											"type": "TabularTranslator",
											"typeConversion": true,
											"typeConversionSettings": {
												"allowDataTruncation": true,
												"treatBooleanAsNumber": false
											}
										}
									},
									"inputs": [
										{
											"referenceName": "Psrc",
											"type": "DatasetReference",
											"parameters": {
												"container_name": {
													"value": "@pipeline().globalParameters.container_name",
													"type": "Expression"
												},
												"Tables_Name": {
													"value": "@item().Table_Names",
													"type": "Expression"
												}
											}
										}
									],
									"outputs": [
										{
											"referenceName": "Psink",
											"type": "DatasetReference",
											"parameters": {}
										}
									]
								}
							]
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-11T06:45:53Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/datasets/sqlserver')]",
				"[concat(variables('factoryId'), '/datasets/Psrc')]",
				"[concat(variables('factoryId'), '/datasets/Psink')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/orch_end_to_end')]",
			"type": "Microsoft.DataFactory/factories/pipelines",
			"apiVersion": "2018-06-01",
			"properties": {
				"activities": [
					{
						"name": "S2C",
						"type": "ExecutePipeline",
						"dependsOn": [],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "Etl_pipeline",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "C2P",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "S2C",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "C2P",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "P2S",
						"type": "ExecutePipeline",
						"dependsOn": [
							{
								"activity": "C2P",
								"dependencyConditions": [
									"Succeeded"
								]
							}
						],
						"policy": {
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"pipeline": {
								"referenceName": "P2S",
								"type": "PipelineReference"
							},
							"waitOnCompletion": true,
							"parameters": {}
						}
					},
					{
						"name": "P2S_email_notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "P2S",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-60.eastus.logic.azure.com:443/workflows/9a73b5ebe5264fb5b6d4a6faf95f304d/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=4m-usBFPrMHo73qiBc9xIysVAilcDDu-zk66J4PiT9I",
							"body": {
								"value": "{\n  \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n  \"pipelineName\": \"@{pipeline().Pipeline}\",\n  \"pipelineRunId\": \"@{pipeline().RunId}\",\n  \"time\": \"@{utcNow()}\",\n  \"Status\": \"@{activity('P2S').Status}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "S2C_email_notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "S2C",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-60.eastus.logic.azure.com:443/workflows/9a73b5ebe5264fb5b6d4a6faf95f304d/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=4m-usBFPrMHo73qiBc9xIysVAilcDDu-zk66J4PiT9I",
							"body": {
								"value": "{\n  \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n  \"pipelineName\": \"@{pipeline().Pipeline}\",\n  \"pipelineRunId\": \"@{pipeline().RunId}\",\n  \"time\": \"@{utcNow()}\",\n  \"Status\": \"@{activity('S2C').Status}\"\n}",
								"type": "Expression"
							}
						}
					},
					{
						"name": "C2P_email_notification",
						"type": "WebActivity",
						"dependsOn": [
							{
								"activity": "C2P",
								"dependencyConditions": [
									"Completed"
								]
							}
						],
						"policy": {
							"timeout": "0.12:00:00",
							"retry": 0,
							"retryIntervalInSeconds": 30,
							"secureOutput": false,
							"secureInput": false
						},
						"userProperties": [],
						"typeProperties": {
							"method": "POST",
							"headers": {},
							"url": "https://prod-60.eastus.logic.azure.com:443/workflows/9a73b5ebe5264fb5b6d4a6faf95f304d/triggers/When_a_HTTP_request_is_received/paths/invoke?api-version=2016-10-01&sp=%2Ftriggers%2FWhen_a_HTTP_request_is_received%2Frun&sv=1.0&sig=4m-usBFPrMHo73qiBc9xIysVAilcDDu-zk66J4PiT9I",
							"body": {
								"value": "{\n  \"dataFactoryName\": \"@{pipeline().DataFactory}\",\n  \"pipelineName\": \"@{pipeline().Pipeline}\",\n  \"pipelineRunId\": \"@{pipeline().RunId}\",\n  \"time\": \"@{utcNow()}\",\n  \"Status\": \"@{activity('C2P').Status}\"\n}",
								"type": "Expression"
							}
						}
					}
				],
				"policy": {
					"elapsedTimeMetric": {}
				},
				"variables": {
					"status": {
						"type": "String"
					}
				},
				"annotations": [],
				"lastPublishTime": "2025-06-13T05:27:44Z"
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/Etl_pipeline')]",
				"[concat(variables('factoryId'), '/pipelines/C2P')]",
				"[concat(variables('factoryId'), '/pipelines/P2S')]"
			]
		},
		{
			"name": "[concat(parameters('factoryName'), '/sche_trigger')]",
			"type": "Microsoft.DataFactory/factories/triggers",
			"apiVersion": "2018-06-01",
			"properties": {
				"annotations": [],
				"runtimeState": "Started",
				"pipelines": [
					{
						"pipelineReference": {
							"referenceName": "orch_end_to_end",
							"type": "PipelineReference"
						},
						"parameters": {}
					}
				],
				"type": "ScheduleTrigger",
				"typeProperties": {
					"recurrence": {
						"frequency": "Day",
						"interval": 1,
						"startTime": "2025-06-16T10:00:00",
						"timeZone": "India Standard Time",
						"schedule": {
							"minutes": [
								0
							],
							"hours": [
								10
							]
						}
					}
				}
			},
			"dependsOn": [
				"[concat(variables('factoryId'), '/pipelines/orch_end_to_end')]"
			]
		}
	]
}